import RPi.GPIO as GPIO 
from gpiozero import PWMLED
import time
import requests
GPIO.setmode(GPIO.BCM)

TRIG = 4 
ECHO = 17 
BUZZER = 14
 
print ("Measuring Distance") 
 
GPIO.setup(TRIG,GPIO.OUT) 
GPIO.setup(ECHO,GPIO.IN)
GPIO.setup(BUZZER, GPIO.OUT)
 
GPIO.output(TRIG,False) 
 
pwm = GPIO.PWM(BUZZER, 100)
pwm.start(0)
 
 #ultrasonic sensor function
def UltrasonicSensor(): 
    print ("Currently Reading Distnce") 
    time.sleep(2) 
 
    GPIO.output(TRIG,True) 
    time.sleep(0.0001) 
    GPIO.output(TRIG,False) 
 
    while GPIO.input(ECHO)==0: 
        starttime = time.time() 
         
    while GPIO.input(ECHO)==1: 
        endtime = time.time() 
 
    duration = endtime - starttime 
    distance = duration*17150 
    distance = round(distance,2) 
 
    print("Distance: ",distance,"cm") 
    return distance 
 

 #changing buzzer sound
try: 
    while True: 
        distance = UltrasonicSensor() 
        if (distance >= 50): 
            
            pwm.ChangeFrequency(1)
            pwm.ChangeDutyCycle(1)
            time.sleep(1) 
         
        elif (30 <= distance < 50):
            pwm.ChangeFrequency(1)
            pwm.ChangeDutyCycle(30)
             
            time.sleep(1) 
             
        elif (15 <= distance < 30): 
            pwm.ChangeFrequency(1)
            pwm.ChangeDutyCycle(30)
            time.sleep(1) 
             
        elif (0 <= distance < 15): 
            pwm.ChangeFrequency(100)
            pwm.ChangeDutyCycle(100)
            data = requests.post('https://maker.ifttt.com/trigger/emergency_text/with/key/dOUXww3GCVclMtuGPlSOMR')
            print(data.text)
            time.sleep(1) 
except KeyboardInterrupt: 
    print("Ctrl+C to disable this program") 
    pwm.stop() 
    GPIO.cleanup()
